name: "AWS Marketplace Mirror: Camunda Helm chart"

on:
  workflow_dispatch:
    inputs:
      imageTag:
        description: "The helm release version"
        required: true
        default: "8.3.3"
      awsImageTag:
        description: "The helm release version for aws"
        required: true
        default: "8.3.3-1"

env:
  MARKETPLACE_BASE_URL: "709825985650.dkr.ecr.us-east-1.amazonaws.com"

jobs:
  build:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/login_to_aws
        with:
          aws-role-arn: "arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubAction-AssumeRoleWithAction"
          aws-region: "us-east-1"
          marketplace-base-url: "709825985650.dkr.ecr.us-east-1.amazonaws.com"

      - run: |
          aws ecr get-login-password --region us-east-1 | helm registry login --username AWS --password-stdin $MARKETPLACE_BASE_URL

      - name: add repo
        run: helm repo add camunda "https://helm.camunda.io"

      - name: add repo
        run: helm repo update

      - name: Pull the helm chart
        run: helm pull camunda/camunda-platform --version $IMAGE_TAG
        env:
          IMAGE_TAG: ${{ inputs.imageTag }}

      - name: Unpack the helm chart
        run: tar -xzvf camunda-platform-*.tgz

      - name: remove old tar
        run: rm -rf camunda-platform-*.tgz

      - name: copy licensemanager into templates
        run: cp aws-marketplace/licensemanager/chart_preinstall_hook.yaml camunda-platform/templates/

      - name: replace chart version
        run: 'sed -i "s/^version: .*/version: $IMAGE_TAG/" camunda-platform/Chart.yaml'
        env:
          IMAGE_TAG: ${{ inputs.awsImageTag }}

      - name: copy first user password into templates
        run: cp aws-marketplace/firstuser-password.yaml camunda-platform/templates/

      - name: package modified chart
        run: helm package camunda-platform

      - name: Push the docker image
        run: helm push camunda-platform-$IMAGE_TAG.tgz oci://709825985650.dkr.ecr.us-east-1.amazonaws.com/camunda/camunda8
        env:
          IMAGE_TAG: ${{ inputs.awsImageTag }}
